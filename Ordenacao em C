//bubble ordenação crescente

void bubbleSort(int *v, int x){
	int i,j,aux;	
	for(i=0; i<x-1; i++){
		for(j=0; j<x-1; j++){
			if(v[j] > v[j+1]){
				aux = v[j];
				v[j] = v[j+1];
				v[j+1] = aux;
			}	
		}
	}
	
}

//selection ordenação crescente

void selectionSort(int *v, int x){
	int i,j,aux,menor;	
	for(i=0; i<x-1; i++){
		menor = i;//menor recebe i
		
		for(j=i; j<x; j++){//for de j inicia com o valor de i
			if(v[j] < v[menor]){//se o valor de v[j] for menor que o valor de v[menor]
				menor = j;//menor recebe o valor j, ou seja a posição j
			}
		}
		if(i != menor){
			aux = v[i];
			v[i] = v[menor];
			v[menor] = aux;
		}
	}
}

//Insertion com ordenação crescente

void insertionSort(int *v, int x){
	int i,j,aux;	
	for(i=1; i<x; i++){
		aux = v[i];
		
		for(j=i; (j>0) && (aux < v[j-1]); j--){//se o valor de j > 0 e o valor do v[i] < v[j-1] realiza a troca
			v[j] = v[j-1];
		}
		v[j] = aux;	
	}
}
